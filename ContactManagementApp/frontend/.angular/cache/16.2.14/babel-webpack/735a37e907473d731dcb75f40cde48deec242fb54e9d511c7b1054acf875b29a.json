{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ContactEditComponent = class ContactEditComponent {\n  constructor(route, contactService) {\n    this.route = route;\n    this.contactService = contactService;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const id = +params['id']; // Extract id from route parameters (convert to number)\n      this.contactService.getContact(id).subscribe(data => {\n        this.contact = data; // Assign fetched contact to component property\n      }, error => {\n        console.error('Error fetching contact:', error);\n        // Handle error, e.g., show error message\n      });\n    });\n  }\n};\n\nContactEditComponent = __decorate([Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.css']\n})], ContactEditComponent);\nexport { ContactEditComponent };","map":{"version":3,"names":["Component","ContactEditComponent","constructor","route","contactService","ngOnInit","params","subscribe","id","getContact","data","contact","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\aarim\\Downloads\\SoftDevApp\\ContactManagementApp\\frontend\\src\\app\\contact-edit\\contact-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router'; // Import ActivatedRoute for getting route parameters\r\nimport { ContactService } from '../../../models/contact.service';\r\nimport { Contact } from '../models/contact.model'; // Adjust path as per your project structure\r\n\r\n@Component({\r\n  selector: 'app-contact-edit',\r\n  templateUrl: './contact-edit.component.html',\r\n  styleUrls: ['./contact-edit.component.css']\r\n})\r\nexport class ContactEditComponent implements OnInit {\r\n  contact: Contact;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private contactService: ContactService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      const id = +params['id']; // Extract id from route parameters (convert to number)\r\n      this.contactService.getContact(id).subscribe(\r\n        data => {\r\n          this.contact = data; // Assign fetched contact to component property\r\n        },\r\n        error => {\r\n          console.error('Error fetching contact:', error);\r\n          // Handle error, e.g., show error message\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YACUC,KAAqB,EACrBC,cAA8B;IAD9B,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,cAAc,GAAdA,cAAc;EACrB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,MAAME,EAAE,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;MAC1B,IAAI,CAACF,cAAc,CAACK,UAAU,CAACD,EAAE,CAAC,CAACD,SAAS,CAC1CG,IAAI,IAAG;QACL,IAAI,CAACC,OAAO,GAAGD,IAAI,CAAC,CAAC;MACvB,CAAC,EACDE,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C;MACF,CAAC,CACF;IACH,CAAC,CAAC;EACJ;CACD;;AAtBYX,oBAAoB,GAAAa,UAAA,EALhCd,SAAS,CAAC;EACTe,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhB,oBAAoB,CAsBhC;SAtBYA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}