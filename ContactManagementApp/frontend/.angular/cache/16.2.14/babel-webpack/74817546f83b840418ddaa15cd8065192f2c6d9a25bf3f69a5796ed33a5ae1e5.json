{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContactService = /*#__PURE__*/(() => {\n  class ContactService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:3000/contacts'; // Adjust URL based on your backend API\n    }\n    // Retrieve all contacts\n    getContacts() {\n      return this.http.get(this.apiUrl);\n    }\n    // Retrieve a single contact by ID\n    getContact(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    // Add a new contact\n    addContact(contact) {\n      return this.http.post(this.apiUrl, contact);\n    }\n    // Update an existing contact by ID\n    updateContact(id, contact) {\n      return this.http.put(`${this.apiUrl}/${id}`, contact);\n    }\n    // Delete a contact by ID\n    deleteContact(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    static #_ = this.ɵfac = function ContactService_Factory(t) {\n      return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContactService,\n      factory: ContactService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ContactService;\n})();","map":{"version":3,"names":["ContactService","constructor","http","apiUrl","getContacts","get","getContact","id","addContact","contact","post","updateContact","put","deleteContact","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aarim\\Downloads\\SoftDevApp\\ContactManagementApp\\frontend\\src\\app\\services\\contact.service.ts"],"sourcesContent":["// contact.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Contact } from '../contact'; // Assuming 'contact' is the correct file name for your contact model\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n  private apiUrl = 'http://localhost:3000/contacts'; // Adjust URL based on your backend API\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Retrieve all contacts\r\n  getContacts(): Observable<Contact[]> {\r\n    return this.http.get<Contact[]>(this.apiUrl);\r\n  }\r\n\r\n  // Retrieve a single contact by ID\r\n  getContact(id: number): Observable<Contact> {\r\n    return this.http.get<Contact>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  // Add a new contact\r\n  addContact(contact: Contact): Observable<Contact> {\r\n    return this.http.post<Contact>(this.apiUrl, contact);\r\n  }\r\n\r\n  // Update an existing contact by ID\r\n  updateContact(id: number, contact: Contact): Observable<Contact> {\r\n    return this.http.put<Contact>(`${this.apiUrl}/${id}`, contact);\r\n  }\r\n\r\n  // Delete a contact by ID\r\n  deleteContact(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n\r\n"],"mappings":";;AASA,WAAaA,cAAc;EAArB,MAAOA,cAAc;IAGzBC,YAAoBC,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;MAFhB,KAAAC,MAAM,GAAG,gCAAgC,CAAC,CAAC;IAEZ;IAEvC;IACAC,WAAWA,CAAA;MACT,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC;IAC9C;IAEA;IACAG,UAAUA,CAACC,EAAU;MACnB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;IACvD;IAEA;IACAC,UAAUA,CAACC,OAAgB;MACzB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;IACtD;IAEA;IACAE,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;MACxC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAU,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,OAAO,CAAC;IAChE;IAEA;IACAI,aAAaA,CAACN,EAAU;MACtB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;IACvD;IAAC,QAAAQ,CAAA,G;uBA5BUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;IAAA,QAAAC,EAAA,G;aAAdpB,cAAc;MAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;MAAAC,UAAA,EAFb;IAAM;;SAEPvB,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}