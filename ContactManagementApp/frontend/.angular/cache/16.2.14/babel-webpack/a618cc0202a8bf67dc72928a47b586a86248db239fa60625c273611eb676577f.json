{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContactService = /*#__PURE__*/(() => {\n  class ContactService {\n    http;\n    apiUrl = 'http://localhost:3000/contacts'; // Adjust API URL as needed\n    constructor(http) {\n      this.http = http;\n    }\n    getContacts() {\n      return this.http.get(this.apiUrl);\n    }\n    getContact(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    addContact(contact) {\n      return this.http.post(this.apiUrl, contact);\n    }\n    updateContact(id, contact) {\n      return this.http.put(`${this.apiUrl}/${id}`, contact);\n    }\n    deleteContact(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    static ɵfac = function ContactService_Factory(t) {\n      return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ContactService,\n      factory: ContactService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ContactService;\n})();","map":{"version":3,"names":["HttpClient","ContactService","http","apiUrl","constructor","getContacts","get","getContact","id","addContact","contact","post","updateContact","put","deleteContact","delete","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["C:\\Users\\aarim\\Downloads\\SoftDevApp\\ContactManagementApp\\frontend\\src\\app\\services\\contact.service.ts"],"sourcesContent":["// contact.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Contact } from '../models/contact'; // Adjust path as per your project structure\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n  private apiUrl = 'http://localhost:3000/contacts'; // Adjust API URL as needed\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getContacts(): Observable<Contact[]> {\r\n    return this.http.get<Contact[]>(this.apiUrl);\r\n  }\r\n\r\n  getContact(id: number): Observable<Contact> {\r\n    return this.http.get<Contact>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  addContact(contact: Contact): Observable<Contact> {\r\n    return this.http.post<Contact>(this.apiUrl, contact);\r\n  }\r\n\r\n  updateContact(id: number, contact: Contact): Observable<Contact> {\r\n    return this.http.put<Contact>(`${this.apiUrl}/${id}`, contact);\r\n  }\r\n\r\n  deleteContact(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,UAAU,QAAQ,sBAAsB;;;AAOjD,WAAaC,cAAc;EAArB,MAAOA,cAAc;IAGLC,IAAA;IAFZC,MAAM,GAAG,gCAAgC,CAAC,CAAC;IAEnDC,YAAoBF,IAAgB;MAAhB,KAAAA,IAAI,GAAJA,IAAI;IAAe;IAEvCG,WAAWA,CAAA;MACT,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACH,MAAM,CAAC;IAC9C;IAEAI,UAAUA,CAACC,EAAU;MACnB,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAU,GAAG,IAAI,CAACH,MAAM,IAAIK,EAAE,EAAE,CAAC;IACvD;IAEAC,UAAUA,CAACC,OAAgB;MACzB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAU,IAAI,CAACR,MAAM,EAAEO,OAAO,CAAC;IACtD;IAEAE,aAAaA,CAACJ,EAAU,EAAEE,OAAgB;MACxC,OAAO,IAAI,CAACR,IAAI,CAACW,GAAG,CAAU,GAAG,IAAI,CAACV,MAAM,IAAIK,EAAE,EAAE,EAAEE,OAAO,CAAC;IAChE;IAEAI,aAAaA,CAACN,EAAU;MACtB,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIK,EAAE,EAAE,CAAC;IACvD;;uBAvBWP,cAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAlB,UAAA;IAAA;;aAAdC,cAAc;MAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;MAAAC,UAAA,EAFb;IAAM;;SAEPpB,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}